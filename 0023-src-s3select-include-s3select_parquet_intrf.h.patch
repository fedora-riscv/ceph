--- ceph-17.2.3/src/s3select/include/s3select_parquet_intrf.h.orig	2022-08-03 18:31:07.578235502 -0400
+++ ceph-17.2.3/src/s3select/include/s3select_parquet_intrf.h	2022-08-05 11:14:16.114933605 -0400
@@ -196,8 +196,8 @@
                       bool write_only) override {
     RETURN_NOT_OK(SetFileName(path));
 
-    ARROW_ASSIGN_OR_RAISE(fd_, ::arrow::internal::FileOpenWritable(file_name_, write_only,
-                                                                   truncate, append));
+    fd_ = ::arrow::internal::FileOpenWritable(file_name_, write_only,
+                                                       truncate, append)->fd();
     is_open_ = true;
     mode_ = write_only ? FileMode::WRITE : FileMode::READWRITE;
 
@@ -229,7 +229,7 @@
   Status OpenReadable(const std::string& path) override {
     RETURN_NOT_OK(SetFileName(path));
 
-    ARROW_ASSIGN_OR_RAISE(fd_, ::arrow::internal::FileOpenReadable(file_name_));
+    fd_ = ::arrow::internal::FileOpenReadable(file_name_)->fd();
     ARROW_ASSIGN_OR_RAISE(size_, ::arrow::internal::FileGetSize(fd_));
 
     is_open_ = true;
@@ -970,7 +970,7 @@
       CryptoContext ctx(col->has_dictionary_page(), row_group_ordinal_,
                         static_cast<int16_t>(i), meta_decryptor, data_decryptor);
       return PageReader::Open(stream, col->num_values(), col->compression(),
-                              properties_.memory_pool(), &ctx);
+                              false, properties_.memory_pool(), &ctx);
     }
 
     // The column is encrypted with its own key
@@ -985,7 +985,7 @@
     CryptoContext ctx(col->has_dictionary_page(), row_group_ordinal_,
                       static_cast<int16_t>(i), meta_decryptor, data_decryptor);
     return PageReader::Open(stream, col->num_values(), col->compression(),
-                            properties_.memory_pool(), &ctx);
+                            false, properties_.memory_pool(), &ctx);
   }
 
  private:

--- ceph-14.0.1/src/dpdk/mk/toolchain/gcc/rte.vars.mk.orig	2019-02-05 16:28:09.211608099 -0500
+++ ceph-14.0.1/src/dpdk/mk/toolchain/gcc/rte.vars.mk	2019-02-05 18:10:00.237608099 -0500
@@ -75,7 +75,7 @@
 WERROR_FLAGS += -Wmissing-declarations -Wold-style-definition -Wpointer-arith
 WERROR_FLAGS += -Wcast-align -Wnested-externs -Wcast-qual
 WERROR_FLAGS += -Wformat-nonliteral -Wformat-security
-WERROR_FLAGS += -Wundef -Wwrite-strings
+WERROR_FLAGS += -Wundef -Wwrite-strings -Wno-address-of-packed-member
 
 ifeq ($(RTE_DEVEL_BUILD),y)
 WERROR_FLAGS += -Werror
@@ -99,5 +99,6 @@
 WERROR_FLAGS += -Wno-uninitialized
 endif
 
+
 export CC AS AR LD OBJCOPY OBJDUMP STRIP READELF
 export TOOLCHAIN_CFLAGS TOOLCHAIN_LDFLAGS TOOLCHAIN_ASFLAGS
--- ceph-14.0.1/src/spdk/dpdk/mk/toolchain/gcc/rte.vars.mk.orig	2019-02-05 18:28:01.999608099 -0500
+++ ceph-14.0.1/src/spdk/dpdk/mk/toolchain/gcc/rte.vars.mk	2019-02-05 18:29:08.664608099 -0500
@@ -47,7 +47,7 @@
 WERROR_FLAGS += -Wmissing-declarations -Wold-style-definition -Wpointer-arith
 WERROR_FLAGS += -Wcast-align -Wnested-externs -Wcast-qual
 WERROR_FLAGS += -Wformat-nonliteral -Wformat-security
-WERROR_FLAGS += -Wundef -Wwrite-strings -Wdeprecated
+WERROR_FLAGS += -Wundef -Wwrite-strings -Wno-address-of-packed-member -Wdeprecated
 
 ifeq ($(RTE_DEVEL_BUILD),y)
 WERROR_FLAGS += -Werror
--- ceph-14.0.1/src/common/config.cc.orig	2019-02-06 09:08:43.078608099 -0500
+++ ceph-14.0.1/src/common/config.cc	2019-02-06 12:10:13.484608099 -0500
@@ -1340,6 +1340,8 @@
 template<typename Size>
 struct get_size_visitor : public boost::static_visitor<Size>
 {
+  get_size_visitor() {}
+
   template<typename T>
   Size operator()(const T&) const {
     return -1;
--- ceph-14.0.1/src/dmclock/src/dmclock_server.h.orig	2019-02-07 07:10:17.778608099 -0500
+++ ceph-14.0.1/src/dmclock/src/dmclock_server.h	2019-02-07 07:29:47.868608099 -0500
@@ -829,8 +829,8 @@
 			AtLimitParam at_limit_param,
 			double _anticipation_timeout) :
 	client_info_f(_client_info_f),
-	at_limit(get_or_default<AtLimit>(at_limit_param, AtLimit::Reject)),
-	reject_threshold(get_or_default<RejectThreshold>(at_limit_param, 0)),
+	at_limit(get_or_default(at_limit_param, AtLimit::Reject)),
+	reject_threshold(get_or_default(at_limit_param, RejectThreshold{0})),
 	anticipation_timeout(_anticipation_timeout),
 	finishing(false),
 	idle_age(std::chrono::duration_cast<Duration>(_idle_age)),
